on:
  push:
    branches: [main, feature/177/redis-cache]
  pull_request:
    branches: [main, feature/177/redis-cache]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
      - run: poetry install

      - name: Lint
        run: poetry run python -m black --check .

      - name: SonarCloud Analysis
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Tests
        env:
          DATABASE_HOST: ${{ secrets.DATABASE_HOST}}
          DATABASE_USER: ${{ secrets.DATABASE_USER}}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME}}
          POLITRACK_API_URL: ${{ secrets.POLITRACK_API_URL}}
          POLITRACK_USERNAME: ${{ secrets.POLITRACK_USERNAME}}
          POLITRACK_SECRET_PASSWORD: ${{ secrets.POLITRACK_SECRET_PASSWORD}}
        run: poetry run pytest

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: [ci]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/feature/177/redis-cache' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: facethefacts/api:latest
  cd:
    runs-on: ubuntu-latest
    needs: [build_and_push_docker_image]
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature/177/redis-cache') }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Create Dockerrun.aws.json
        run: |
          cat > Dockerrun.aws.json <<EOF
          {
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "facethefacts/api:latest",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "8000"
              }
            ]
          }
          EOF

      - name: Deploy Docker image to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ github.ref == 'refs/heads/main' && 'Face-The-Facts Backend' || 'Face-The-Facts-Backend-Redis' }}
          environment_name: ${{ github.ref == 'refs/heads/main' && 'Face-The-Facts-Backend-Main' || 'Face-The-Facts-Backend-Redis-env' }}
          version_label: ${{ github.sha }}
          use_existing_version_if_available: true
          region: eu-central-1
          deployment_package: Dockerrun.aws.json
